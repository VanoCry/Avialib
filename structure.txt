как реализовать это на C++?
Структура "Заказ":
Свойства:
Название авиакомпании (строка) 
Дистрибьютор билета (строка)
цена билета (целое число) связано со структурой билет 
Идентификатор билета (уникальный номер)(связь со структурой "билет")

Структура "Покупатель":
Свойства:
ФИО (строка)
Номер телефона (целое число )
Дата рождения (строка)
Адрес проживания (строка)

Структура "Билет":
Свойства:
место отправления = строка
место прибытия = строка 
дистрибьютор = строка (связано со структурой "заказ")
цена билета = строка
идентификтор билета = строка 
Фио = строка связанная со структурой покупателя

Структура "Операция":
Свойства:
Действие (выдача билета, возврат билета)
Дата операции (строка)
Идентификатор билета (связь со структурой "билет")
Номер телефона покупателя (связь со структурой "покупатель")

Структура "авиа_база данных":
Свойства:
Список билетов (массив структур "билет")
Список покупателей (массив структур "Покупатель")
Список операций (массив структур "Операция")
Список заказов (массив структур "заказ")

#include <iostream>
#include <string>
#include <vector>

// Структура "Заказ"
struct Заказ {
    std::string название_авиакомпании;
    std::string дистрибьютор_билета;
    int цена_билета;
    int идентификатор_билета; // Уникальный номер билета
};

// Структура "Покупатель"
struct Покупатель {
    std::string ФИО;
    int номер_телефона;
    std::string дата_рождения;
    std::string адрес_проживания;
};

// Структура "Билет"
struct Билет {
    std::string место_отправления;
    std::string место_прибытия;
    std::string дистрибьютор;
    std::string цена_билета;
    std::string идентификатор_билета;
    std::string ФИО_покупателя; // Связь с структурой "Покупатель"
};

// Структура "Операция"
struct Операция {
    std::string действие; // "выдача билета" или "возврат билета"
    std::string дата_операции;
    int идентификатор_билета; // Связь с структурой "Билет"
    int номер_телефона_покупателя; // Связь с структурой "Покупатель"
};

// Структура "Авиа_база данных"
struct Авиа_база_данных {
    std::vector<Заказ> список_заказов;
    std::vector<Покупатель> список_покупателей;
    std::vector<Операция> список_операций;
    std::vector<Билет> список_билетов;
};

int main() {
    // Создаем экземпляр базы данных
    Авиа_база_данных база_данных;

    // Добавляем данные в базу данных
    Заказ заказ1 = {"Авиакомпания1", "Дистрибьютор1", 1000, 1};
    Покупатель покупатель1 = {"Иван Иванов", 1234567890, "01.01.1990", "Адрес1"};
    Билет билет1 = {"Город A", "Город B", "Дистрибьютор A", "500", "AB123", "Иван Иванов"};
    Операция операция1 = {"выдача билета", "01.01.2023", 1, 1234567890};

    база_данных.список_заказов.push_back(заказ1);
    база_данных.список_покупателей.push_back(покупатель1);
    база_данных.список_билетов.push_back(билет1);
    база_данных.список_операций.push_back(операция1);

    // Ваш код здесь...

    return 0;
}

созадть объединенную функцию input где буду вводится все данные
где они будут использоваться и для каких функций подумать потом
нужен вывод таблицы каждой из структур по отдельности
хранение структур в массиве
#include <iostream>
#include <vector>

int main() {
    std::vector<int> myVector = {1, 2, 3, 4, 5};

    std::cout << "Элементы вектора:" << std::endl;
    
    for (const int& element : myVector) {
        std::cout << element << " ";
    }

    std::cout << std::endl;

    return 0;
}